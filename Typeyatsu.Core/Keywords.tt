<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>

namespace Typeyatsu.Core
{
    public static class Keywords
    {
        public static Keyword[] Hatena = new[]
        {
<#
    using (var sr = new StreamReader(this.Host.ResolvePath("keywordlist_furigana.csv"), Encoding.GetEncoding("EUC-JP")))
    {
        while (true)
        {
            var line = sr.ReadLine();
            if (line == null) break;
            var s = line.Split(new[] { '\t' }, StringSplitOptions.None);
            if (s.Length == 2)
            {
                var word = s[1];
                var furigana = s[0];
                if (FilterKeyword(word, furigana))
                {
#>
            new Keyword(@"<#= word #>", @"<#= furigana #>"),
<#
                }
            }
        }
    }
#>
        };
    }
}

<#+
    private static bool FilterKeyword(string word, string furigana)
    {
        if (string.IsNullOrEmpty(furigana)) return false;
        if (furigana.Length > 16) return false;
        if (word.All(x => "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＺ0123456789０１２３４５６７８９ 　!?！？-－".Contains(x)))
            return false;

        for (var i = 0; i < furigana.Length; i++)
        {
            switch (furigana[i])
            {
                case 'ゐ':
                case 'ゑ':
                    return false;
                case '゛':
                    if (i == 0 || furigana[i - 1] != 'う')
                        return false;
                    break;
            }
        }

        return true;
    }
#>
